{
  "name": "backbone-couch",
  "description": "Backbone.js sync for CouchDB",
  "author": {
    "name": "Development Seed",
    "email": "info@developmentseed.org",
    "url": "http://developmentseed.org/"
  },
  "version": "2.0.0",
  "homepage": "https://github.com/developmentseed/backbone-couch",
  "repository": {
    "type": "git",
    "url": "git://github.com/developmentseed/backbone-couch.git"
  },
  "main": "./backbone-couch",
  "engines": {
    "node": "*"
  },
  "dependencies": {
    "request": "2.9.x",
    "backbone": "= 0.5.1",
    "underscore": "1.1.x"
  },
  "devDependencies": {
    "mocha": "1.0.x"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "readme": "Backbone Couch\n--------------\nOverrides for [Backbone](http://documentcloud.github.com/backbone/) to use\n[CouchDB](http://couchdb.apache.org/) for Model persistence. Intended for\nserver-side use of Backbone like in\n[Bones](https://github.com/developmentseed/bones).\n\n### Installation\n\n    npm install backbone-couch\n\n### Usage\n\n    var Backbone = require('backbone');\n\n    // Create a new backbone-couch handler for a database 'documents'.\n    var couch = require('backbone-couch')({\n        host: '127.0.0.1',\n        port: '5984',\n        name: 'documents'\n    });\n\n    // Create database, push default design documents to it and\n    // assign sync method to Backbone.\n    couch.install(function(err) {\n        Backbone.sync = couch.sync;\n    });\n\n    // Backbone.sync will now load and save models from a 'documents' couch db.\n\n### Conventions\n\n`backbone-couch` stores models in using the `model.url` as its `_id`.\nBy default, Collections retrieve models by matching the Collection url against\nthe initial portion of the Model url. See `backbone.json` for the default\ndesign document and collection view.\n\n    var orange = new FruitModel({id: 'orange'});\n    var apple = new FruitModel({id: 'apple'});\n    var banana = new FruitModel({id: 'banana'});\n\n    console.log(orange.url()); // fruits/orange\n    console.log(apple.url());  // fruits/apple\n    console.log(banana.url()); // fruits/banana\n\n    var fruits = new FruitCollection();\n\n    console.log(fruits.url);   // fruits\n\n    fruits.fetch();            // retrieves orange, apple, banana\n\nTo override the default design doc with your own special sauce use the `doc`\noption when calling `couch.install()`.\n\n    // Pass a filepath to your design doc.\n    couch.install({doc: '/path/to/my/doc.json'}, callback);\n\n    // Or provide a literal js object directly.\n    couch.install({doc: {\n        _id: '_design/backbone',\n        language: 'javascript'\n    }, callback);\n\nYour design doc should use `_design/backbone` as its `_id`. Collections will be\ncalled against this design doc using their `url`. For example, if you have a\nCollection `/blog/recent`, your design doc should provide a rewrite rule to\nrespond to this path:\n\n    {\n        \"_id\":\"_design/backbone\",\n        \"language\":\"javascript\",\n        \"views\": {\n            \"recent\": {\n                \"map\": \"function(doc) { emit(doc._id, doc._id) }\"\n            }\n        },\n        \"rewrites\": [\n            {\n                \"from\": \"/blog/recent\",\n                \"to\": \"_view/recent\",\n                \"query\": {\n                    \"limit\": \"10\"\n                    \"include_docs\": \"true\"\n                }\n            }\n        ]\n    }\n\nSee the [rewrite handler docs](http://wiki.apache.org/couchdb/Rewriting_urls)\nor this [blog post](http://blog.couchbase.com/whats-new-in-apache-couchdb-0-11-part-one-nice-urls)\nfor more info on design doc rewrites.\n\n### Run tests\n\nYou must configure CouchDB to work with HTTPS in order to run tests.\nSee [this wiki page](http://wiki.apache.org/couchdb/How_to_enable_SSL)\n\n    cd backbone-couch/\n    npm test\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/developmentseed/backbone-couch/issues"
  },
  "_id": "backbone-couch@2.0.0",
  "dist": {
    "shasum": "5a16e160adcb398f1c1bb5df1ab2fcb8c5e27269"
  },
  "_from": "backbone-couch@",
  "_resolved": "https://registry.npmjs.org/backbone-couch/-/backbone-couch-2.0.0.tgz"
}
